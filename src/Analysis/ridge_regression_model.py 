"""
Ridge Regression Model Training and Evaluation

This script defines functions to train a Ridge regression model,
perform hyperparameter tuning using GridSearchCV, and evaluate the model.

Functions:
    - train_ridge_regression_model(X_train, y_train, X_test)
        Trains a Ridge regression model using the provided training data,
        performs hyperparameter tuning, and evaluates the model on the test set.

"""

from sklearn.linear_model import Ridge
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

def train_ridge_regression_model(X_train, y_train, X_test):
    """
    Train Ridge Regression Model

    Parameters:
    - X_train (pd.DataFrame): Features of the training data.
    - y_train (pd.Series): Target variable of the training data.
    - X_test (pd.DataFrame): Features of the test data.

    Returns:
    None
    """
    # Features and target variable
    X = X_train
    y = y_train

    # Split the data into training and testing sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    # Ridge Regression Model
    parameters = {'alpha': [0.001, 0.01, 0.1, 1, 10, 100]}
    ridge_reg_model = Ridge()
    grid_search = GridSearchCV(ridge_reg_model, parameters, scoring='neg_mean_squared_error', cv=5)
    grid_search.fit(X_train, y_train)

    # Best parameters and model
    best_alpha = grid_search.best_params_['alpha']
    best_ridge_model = grid_search.best_estimator_
    print(f'Best Alpha: {best_alpha}')

    # Predictions
    y_pred_ridge = best_ridge_model.predict(X_test)

    # Evaluation
    mse_ridge = mean_squared_error(y_test, y_pred_ridge)
    print(f'Ridge Regression Mean Squared Error: {mse_ridge}')